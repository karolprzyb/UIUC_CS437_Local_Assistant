substitutions:

  # **** CHANGE FRIENDLY NAME TO SOMETHING UNIQUE PER DEVICE ****
  friendly_name: Kauf Bulb



esphome:

  # **** CHANGE DEVICE NAME TO SOMETHING UNIQUE PER DEVICE ****
  name: kauf-bulb     # **** RENAME YAML FILE TO SAME NAME ****

  platform: ESP8266
  board: esp01_1m
  includes:
  - kauf_bulb_light.h

  # uncomment next line to have bulb state saved when power turns off    
  # esp8266_restore_from_flash: true

  # remove next line if renaming to something unique above
  name_add_mac_suffix: true

  # project info can be deleted
  project:
    name: "kauf.blf10"
    version: "1.4"

  # delete on_boot section to stop light from automatically turning on when power is applied.
  # uncommenting esp8266_restore_from_flash line above will make the bulb restore the state when power was lost.
  on_boot:
    then:
      - light.turn_on:
          id: kauf_light
          transition_length: 0s




external_components:
  - source:
      type: local
      path: my_components

wifi:

  # **** ENTER WI-FI CREDENTIALS HERE, USING SECRETS.YAML RECOMMENDED ****
  ssid: !secret wifi_ssid
  password: !secret wifi_pass

  # Uncomment below to set a static IP
  # manual_ip:
  #   static_ip: !secret kauf_bulb_ip_address
  #   gateway: !secret wifi_gateway
  #   subnet: !secret wifi_subnet
  #   dns1: !secret wifi_dns1

  # use_address allows wireless programming through dashboard.  set to the plug's IP Address.
  # remove after programming.
  # use_address: 192.168.1.3

  # default is 20, 17 is recommended.
  output_power: 17

  ap:
    ssid: ${friendly_name} Hotspot


captive_portal:   # for fallback wifi hotspot

logger:                               # Enable logging
#  baud_rate: 0                       # Disable UART logging since TX pad not easily available

ota:
  # password: !secret ota_password    # optional password for OTA updates.


debug:                                # outputs additional debug info when logs start



web_server:                           # web server allows access to device with a web browser
  # auth:                             # optional login details for web interface
  #   username: admin
  #   password: !secret web_server_password


# PWM outputs for each LED channel
output:
  - platform: esp8266_pwm
    pin: GPIO4
    frequency: 1000 Hz
    id: pwm_red
  - platform: esp8266_pwm
    pin: GPIO12
    frequency: 1000 Hz
    id: pwm_green
  - platform: esp8266_pwm
    pin: GPIO14
    frequency: 1000 Hz
    id: pwm_blue
  - platform: esp8266_pwm
    pin: GPIO5
    frequency: 1000 Hz
    id: pwm_cw
  - platform: esp8266_pwm
    pin: GPIO13
    frequency: 1000 Hz
    id: pwm_ww


# uncomment this section, and comment out the other light section, to use default ESPHome light
# light:
#   - platform: rgbww
#     name: $friendly_name
#     id: kauf_light
#     red: pwm_red
#     green: pwm_green
#     blue: pwm_blue
#     cold_white: pwm_cw
#     warm_white: pwm_ww
#     cold_white_color_temperature: 6500 K
#     warm_white_color_temperature: 2700 K
#     # constant_brightness: true
#     # color_interlock: true
    
# Kauf custom light component
light:
- platform: custom
  lambda: |-
    auto light_out = new KaufLight();
    light_out->output_red   = id(pwm_red);
    light_out->output_green = id(pwm_green);
    light_out->output_blue  = id(pwm_blue);
    light_out->output_cold  = id(pwm_cw);
    light_out->output_warm  = id(pwm_ww);

    App.register_component(light_out);
    return {light_out};

  lights:
    - name: $friendly_name
      id: kauf_light
      default_transition_length: 250ms                 # transition length


# Send IP Address to HA, can be deleted
text_sensor:
  - platform: wifi_info
    ip_address:
      name: $friendly_name IP Address
